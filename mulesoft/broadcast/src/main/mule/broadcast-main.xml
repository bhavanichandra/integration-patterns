<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mule-zuora-connector="http://www.mulesoft.org/schema/mule/mule-zuora-connector" xmlns:slack="http://www.mulesoft.org/schema/mule/slack"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/slack http://www.mulesoft.org/schema/mule/slack/current/mule-slack.xsd
http://www.mulesoft.org/schema/mule/mule-zuora-connector http://www.mulesoft.org/schema/mule/mule-zuora-connector/current/mule-mule-zuora-connector.xsd">
	<flow name="broadcast-mainFlow" doc:id="a99b2003-c6c7-4cc1-ba4b-e60bc99d0ba4" >
		<salesforce:modified-object-listener objectType="Account" doc:name="On Modified Account" doc:id="afd4530c-3c4d-41b0-9e8e-ac4741713d8d" config-ref="Salesforce_Config" since="${last.updated.date}">
			<scheduling-strategy >
				<fixed-frequency frequency="15" timeUnit="SECONDS"/>
			</scheduling-strategy>
		</salesforce:modified-object-listener>
		<logger level="INFO" doc:name="Logger" doc:id="39db4311-bd3f-4ac2-8c98-bda3f9215b5d" message='Broadcast Started -&gt; #[now() as DateTime {format: "yyyy-MM-dd HH:mm:ss"}] and account payload -&gt; #[payload]'/>
		<ee:transform doc:name="JSON Payload" doc:id="e845928b-50fe-440c-aeb5-8c3892216988" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<scatter-gather doc:name="Scatter-Gather" doc:id="385db37e-f5bb-4187-b4f8-be246cdd0a0e">
			<route>
				<logger level="INFO" doc:name="Broadcast to Database" doc:id="b31b2fa7-6365-466e-a852-176703d1ca98" message="Broadcast to Database" />
				<logger level="INFO" doc:name="Logger" doc:id="04ffa2eb-5952-4ee0-b5c9-361df10b5244" message='Database broadcast started -&gt; #[now() as DateTime {format: "yyyy-MM-dd HH:mm:ss"}]' />
		<db:select doc:name="check if account exists" doc:id="55c63bee-460a-4013-9d2f-ba0b76d34be2" config-ref="Database_Config" target="accountInfo">
			<db:sql><![CDATA[select * from public.account where salesforce_id = :sfdcId]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	sfdcId: payload.Id
}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="d7ee90a9-1662-4833-8864-0d820bfa1421">
			<when expression="#[isEmpty(vars.accountInfo)]">
				<db:insert doc:name="Insert new Account" doc:id="47e784c1-7ac1-4e18-8662-d4eb724a33da" config-ref="Database_Config">
					<db:sql><![CDATA[INSERT INTO  public.account 
	(name, salesforce_id, website, annual_revenue, employees, industry, account_number, phone, ownership, created_date, updated_date)
	VALUES (:name, :salesforceId, :website, :revenue, :employees, :industry, :accounNumber, :phone, :ownership, :createdDate, :updatedDate)]]></db:sql>
					<db:input-parameters><![CDATA[#[output application/java
---
{
	name: payload.Name,
	salesforceId: payload.Id,
	website: payload.Website,
	revenue: payload.AnnualRevenue,
	employees: payload.NumberOfEmployees,
	industry: payload.Industry,
	accounNumber: payload.AccountNumber,
	phone: payload.Phone,
	ownership: payload.Ownership,
	createdDate: now() as LocalDateTime,
	updatedDate: now() as LocalDateTime
}]]]></db:input-parameters>
				</db:insert>
				<ee:transform doc:name="Transform Message" doc:id="67bcefd7-0141-4167-95fe-e7956b93f906">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise>
				<db:update doc:name="Update existing account" doc:id="9fe89326-2dc1-4064-b15e-3d81dc98d191" config-ref="Database_Config">
					<db:sql><![CDATA[UPDATE public.account
SET website=:website, 
annual_revenue=:revenue, 
employees=:employees, 
industry=:industry, 
account_number=:accountNumber, 
ownership=:ownership, 
updated_date=:updatedDate 
WHERE id = :id]]></db:sql>
					<db:input-parameters><![CDATA[#[output application/java
var account = vars.accountInfo[0]
---
{
	website: payload.Website default account.website,
	revenue: payload.AnnualRevenue default account.annual_revenue,
	employees: payload.NumberOfEmployees default account.employees,
	industry: payload.Industry default account.industry,
	accountNumber: payload.AccountNumber default account.account_number,
	ownership: payload.Ownership default account.ownership,
	updatedDate: now() as LocalDateTime,
	id: vars.accountInfo[0].id
}]]]></db:input-parameters>
				</db:update>
				<ee:transform doc:name="Transform Message" doc:id="063242b3-c033-42a3-bf1b-b8e38bf78827">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="1cb1dbed-2f39-4a2d-a8da-b1c19ddb217a" message='Database broadcast Ended -&gt; #[now() as DateTime {format: "yyyy-MM-dd HH:mm:ss"}] and payload after inserting / updating -&gt; #[payload]' />
			</route>
			<route>
				<logger level="INFO" doc:name="Broadcast to Slack" doc:id="e0bc4228-50ab-45f1-a8a3-44476ff42a9e" message="Broadcast to Slack" />
				<logger level="INFO" doc:name="Logger" doc:id="4d847eba-0c0c-47ef-8b5a-0a7cf6e4e6e7" message='Slack broadcast started -&gt; #[now() as DateTime {format: "yyyy-MM-dd HH:mm:ss"}]' />
		<ee:transform doc:name="Slack Request" doc:id="1d912f8f-65b5-4d5f-98e0-049f4da17615">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
[{
	"blocks": [
		{
			"type": "section",
			"text": {
				"type": "mrkdwn",
				"text": ":arrow_right: New Account added to the salesforce: *<login.salesforce.com|Login to salesforce>*"
			}
		},
		{
			"type": "section",
			"fields": [
				{
					"type": "mrkdwn",
					"text": "*Name:*\n" ++ payload.Name
				},
				{
					"type": "mrkdwn",
					"text": "*Industry:*\n" ++ (payload.Industry default "NA")
				},
				{
					"type": "mrkdwn",
					"text": "*Annual Revenue:*\n" ++ (payload.AnnualRevenue default "NA")
				},
				{
					"type": "mrkdwn",
					"text": "*Website:*\n *<" ++ (payload.Website default "www.google.com") ++ ">*" 
				}
			]
		},
		{
			"type": "context",
			"elements": [
				{
					"type": "mrkdwn",
					"text": ":memo: Automatic Notification"
				}
			]
		}
	]
}]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<slack:post-message channel="#['CRA4BTRJ7']" doc:name="Chat - Post Message" doc:id="8db05a0a-9ec3-4751-b15a-6376d222bd73" config-ref="Slack_Config">
			<slack:attachments><![CDATA[#[payload]]]></slack:attachments>
		</slack:post-message>
		<ee:transform doc:name="Transform Message" doc:id="286a14a2-5183-4319-bc14-e158e4341c58">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="741d51e9-053a-4a77-a71f-d4bf8b7f6994" message='Slack broadcast ended -&gt; #[now() as DateTime {format: "yyyy-MM-dd HH:mm:ss"}] and slack response -&gt; #[payload]' />
			</route>
			<route>
				<logger level="INFO" doc:name="Broadcast to Zuora" doc:id="c733df57-a606-42f9-a012-19524918c9a0" message="Broadcast to Zuora" />
				<logger level="INFO" doc:name="Logger" doc:id="c2e3c1ad-c513-4fb0-9e73-384026128289" message='Zuora broadcast started -&gt; #[now() as DateTime {format: "yyyy-MM-dd HH:mm:ss"}] ' />
		<mule-zuora-connector:create-v1-action-query doc:name="Query for Customer Account" doc:id="4264197e-e1c0-41be-9bf5-e5e511a6c76d" config-ref="Zuora_Connector___Mule_4_Config" target="accountInfo">
			<mule-zuora-connector:content><![CDATA[#[output application/json
---
{
  "queryString": "select Id,Name from Account WHERE AccountNumber = '" ++ payload.AccountNumber ++ "'"
}]]]></mule-zuora-connector:content>
		</mule-zuora-connector:create-v1-action-query>
		<choice doc:name="Choice" doc:id="84907eec-c1b1-4d75-b7e9-51f970f2ef30">
			<when expression="#[isEmpty(vars.accountInfo.records)]">
				<ee:transform doc:name="Create Account Request" doc:id="6989f340-c6c4-4596-b37b-7b36c10caba2">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	autoPay:false,
	currency: "INR",
	billCycleDay: 2,
	billToContact: {
		firstName: "John",
		lastName: "Dove",
		workEmail: "bhavanichandra@themuler.com",
		country: "India"
	},
	soldToContact: {
		firstName: "John",
		lastName: "Dove",
		workEmail: "bhavanichandra@themuler.com",
		country: "India"
	},
	name: payload.Name,
	accountNumber: payload.AccountNumber,
	crmId: payload.Id
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<mule-zuora-connector:create-v1-accounts doc:name="Create account" doc:id="2f497e42-7ce1-443b-86d2-0785d00e97e3" config-ref="Zuora_Connector___Mule_4_Config" />
				<ee:transform doc:name="Transform Message" doc:id="97d6989c-d87a-4af7-ad6a-27251a253ff9">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise>
				<ee:transform doc:name="Response" doc:id="f3428f5e-2de2-49e7-8f50-ef13cf2b46a6">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
vars.accountInfo.records[0]]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="24b1ca23-97b9-4601-963d-49aea7f15ae4" message='Zuora broadcast ended -&gt; #[now() as DateTime {format: "yyyy-MM-dd HH:mm:ss"}]  and zuora response -&gt; #[payload]' />
			</route>
		</scatter-gather>
		<ee:transform doc:name="Response from all the routes" doc:id="5b6cc55d-d8a9-4180-aa50-0f75fcd8e69c">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	databaseConfirmation: payload."0".payload.affectedRows,
	slackNotification: payload."1".payload.ts,
	zuoraAccountId: payload."2".payload.accountNumber
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="73515343-b72d-447f-8124-c614d51afa91" message='Broadcast Ended -&gt;  #[now() as DateTime {format: "yyyy-MM-dd HH:mm:ss"}] and Response payload -&gt; #[payload]'/>
	</flow>
</mule>
