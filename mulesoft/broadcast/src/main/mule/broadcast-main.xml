<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:slack="http://www.mulesoft.org/schema/mule/slack" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/slack http://www.mulesoft.org/schema/mule/slack/current/mule-slack.xsd">
	<flow name="broadcast-mainFlow" doc:id="a99b2003-c6c7-4cc1-ba4b-e60bc99d0ba4" >
		<salesforce:modified-object-listener objectType="Account" doc:name="On Modified Account" doc:id="afd4530c-3c4d-41b0-9e8e-ac4741713d8d" config-ref="Salesforce_Config" since="${last.updated.date}">
			<scheduling-strategy >
				<fixed-frequency frequency="25" timeUnit="SECONDS"/>
			</scheduling-strategy>
		</salesforce:modified-object-listener>
		<ee:transform doc:name="JSON Payload" doc:id="e845928b-50fe-440c-aeb5-8c3892216988" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<scatter-gather doc:name="Scatter-Gather" doc:id="385db37e-f5bb-4187-b4f8-be246cdd0a0e" >
			<route >
				<logger level="INFO" doc:name="Broadcast to Database" doc:id="b31b2fa7-6365-466e-a852-176703d1ca98" message="Broadcast to Database"/>
				<flow-ref doc:name="broadcast-main-database" doc:id="9a90805b-f6db-48b5-b662-19a026264f91" name="broadcast-main-database"/>
			</route>
			<route >
				<logger level="INFO" doc:name="Broadcast to Slack" doc:id="e0bc4228-50ab-45f1-a8a3-44476ff42a9e" message="Broadcast to Slack"/>
				<flow-ref doc:name="broadcast-main-slack-notification" doc:id="1b53e928-287f-401d-aedf-9145ce97e815" name="broadcast-main-slack-notification"/>
			</route>
			<route >
				<logger level="INFO" doc:name="Broadcast to Zuora" doc:id="c733df57-a606-42f9-a012-19524918c9a0" message="Broadcast to Zuora"/>
			</route>
		</scatter-gather>
	</flow>
	<sub-flow name="broadcast-main-database" doc:id="1508358b-28e2-4291-a060-16fb62a98e73" >
		<db:select doc:name="check if account exists" doc:id="4a88383a-b265-49aa-905a-3ae13e649946" config-ref="Database_Config" target="accountInfo">
			<db:sql ><![CDATA[select * from public.account where salesforce_id = :sfdcId]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	sfdcId: payload.Id
}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="d81f531d-25a3-4b80-b4a6-dade17728a1e" >
			<when expression="#[isEmpty(vars.accountInfo)]">
				<db:insert doc:name="Insert new Account" doc:id="39a50057-e18b-4aab-af65-9372810f0a9f" config-ref="Database_Config">
					<db:sql ><![CDATA[INSERT INTO  public.account 
	(name, salesforce_id, website, annual_revenue, employees, industry, account_number, phone, ownership, created_date, updated_date)
	VALUES (:name, :salesforceId, :website, :revenue, :employees, :industry, :accounNumber, :phone, :ownership, :createdDate, :updatedDate)]]></db:sql>
					<db:input-parameters ><![CDATA[#[output application/java
---
{
	name: payload.Name,
	salesforceId: payload.Id,
	website: payload.Website,
	revenue: payload.AnnualRevenue,
	employees: payload.NumberOfEmployees,
	industry: payload.Industry,
	accounNumber: payload.AccountNumber,
	phone: payload.Phone,
	ownership: payload.Ownership,
	createdDate: now() as DateTime,
	updatedDate: now() as DateTime
}]]]></db:input-parameters>
				</db:insert>
				<ee:transform doc:name="Transform Message" doc:id="11cf9ea7-84ee-4417-a34f-c687d8db5ce5" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<db:update doc:name="Update existing account" doc:id="b4262a09-228d-4b25-9420-a0f0bc9946f1" config-ref="Database_Config">
					<db:sql ><![CDATA[UPDATE public.account
SET website=:website, 
annual_revenue=:revenue, 
employees=:employees, 
industry=:industry, 
account_number=:accountNumber, 
ownership=:ownership, 
updated_date=:updatedDate 
WHERE id = :id]]></db:sql>
					<db:input-parameters ><![CDATA[#[output application/java
var account = vars.accountInfo[0]
---
{
	website: payload.Website default account.website,
	revenue: payload.AnnualRevenue default account.annual_revenue,
	employees: payload.NumberOfEmployees default account.employees,
	industry: payload.Industry default account.industry,
	accounNumber: payload.AccountNumber default account.account_number,
	ownership: payload.Ownership default account.ownership,
	updatedDate: now() as DateTime,
	id: vars.accountInfo[0].id
}]]]></db:input-parameters>
				</db:update>
				<ee:transform doc:name="Transform Message" doc:id="c90c6e62-8953-41a3-8c87-7f1385185b99" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="2fd1a46d-a7ea-4988-9d4e-f30aa2f30a1f" message="payload after inserting / updating -&gt; #[payload]"/>
	</sub-flow>
	<sub-flow name="broadcast-main-slack-notification" doc:id="cad34d30-08ad-4ff5-b238-7636b6e8c6fe" >
		<ee:transform doc:name="Slack Request" doc:id="119bd9cf-ce24-46b4-b821-087d1dadc402" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
[{
	"blocks": [
		{
			"type": "section",
			"text": {
				"type": "mrkdwn",
				"text": ":arrow_right: New Account added to the salesforce: *<login.salesforce.com|Login to salesforce>*"
			}
		},
		{
			"type": "section",
			"fields": [
				{
					"type": "mrkdwn",
					"text": "*Name:*\n" ++ payload.Name
				},
				{
					"type": "mrkdwn",
					"text": "*Industry:*\n" ++ (payload.Industry default "NA")
				},
				{
					"type": "mrkdwn",
					"text": "*Annual Revenue:*\n" ++ (payload.AnnualRevenue default "NA")
				},
				{
					"type": "mrkdwn",
					"text": "*Website:*\n *<" ++ (payload.Website default "www.google.com") ++ ">*" 
				}
			]
		},
		{
			"type": "context",
			"elements": [
				{
					"type": "mrkdwn",
					"text": ":memo: Automatic Notification"
				}
			]
		}
	]
}]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<slack:post-message channel="#['CRA4BTRJ7']" doc:name="Chat - Post Message" doc:id="ab15a328-5e5f-42f2-b191-637d8d001c8f" config-ref="Slack_Config">
			<slack:attachments ><![CDATA[#[payload]]]></slack:attachments>
		</slack:post-message>
	</sub-flow>
</mule>
